[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"nendoroids.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// imports/api/nendoroids.js                                                                   //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nmodule.export({\n  Nendoroids: function () {\n    return Nendoroids;\n  }\n});\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Nendoroids = new Mongo.Collection('nendoroids');\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"App.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// imports/ui/App.js                                                                           //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar React, Component;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar ReactDOM;\nmodule.link(\"react-dom\", {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 1);\nvar withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker: function (v) {\n    withTracker = v;\n  }\n}, 2);\nvar Nendoroids;\nmodule.link(\"../api/nendoroids.js\", {\n  Nendoroids: function (v) {\n    Nendoroids = v;\n  }\n}, 3);\nvar Nendoroid;\nmodule.link(\"./Nendoroid.js\", {\n  \"default\": function (v) {\n    Nendoroid = v;\n  }\n}, 4);\n\n// App component - represents the whole app\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      hideCompleted: false\n    };\n    return _this;\n  }\n\n  var _proto = App.prototype;\n\n  _proto.handleSubmit = function () {\n    function handleSubmit(event) {\n      event.preventDefault(); // Find the text field via the React ref\n\n      var name = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n      Nendoroids.insert({\n        name: name,\n        createdAt: new Date() // current time\n\n      }); // Clear form\n\n      ReactDOM.findDOMNode(this.refs.textInput).value = '';\n    }\n\n    return handleSubmit;\n  }();\n\n  _proto.toggleHideCompleted = function () {\n    function toggleHideCompleted() {\n      this.setState({\n        hideCompleted: !this.state.hideCompleted\n      });\n    }\n\n    return toggleHideCompleted;\n  }();\n\n  _proto.renderNendoroids = function () {\n    function renderNendoroids() {\n      var filteredNendoroids = this.props.nendoroids;\n\n      if (this.state.hideCompleted) {\n        filteredNendoroids = filteredNendoroids.filter(function (nendoroid) {\n          return !nendoroid.checked;\n        });\n      }\n\n      return filteredNendoroids.map(function (nendoroid) {\n        return React.createElement(Nendoroid, {\n          key: nendoroid._id,\n          nendoroid: nendoroid\n        });\n      });\n    }\n\n    return renderNendoroids;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(\"div\", {\n        className: \"container\"\n      }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Nendoroid List (\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n        className: \"hide-completed\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        readOnly: true,\n        checked: this.state.hideCompleted,\n        onClick: this.toggleHideCompleted.bind(this)\n      }), \"Hide Completed Nendoroids\"), React.createElement(\"form\", {\n        className: \"new-task\",\n        onSubmit: this.handleSubmit.bind(this)\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"textInput\",\n        placeholder: \"Type to add new tasks\"\n      }))), React.createElement(\"ul\", null, this.renderNendoroids()));\n    }\n\n    return render;\n  }();\n\n  return App;\n}(Component);\n\nmodule.exportDefault(withTracker(function () {\n  return {\n    nendoroids: Nendoroids.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    incompleteCount: Nendoroids.find({\n      checked: {\n        $ne: true\n      }\n    }).count()\n  };\n})(App));\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Nendoroid.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// imports/ui/Nendoroid.js                                                                     //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  \"default\": function () {\n    return Nendoroid;\n  }\n});\nvar React, Component;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar Nendoroids;\nmodule.link(\"../api/nendoroids.js\", {\n  Nendoroids: function (v) {\n    Nendoroids = v;\n  }\n}, 1);\n\nvar Nendoroid =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(Nendoroid, _Component);\n\n  function Nendoroid() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Nendoroid.prototype;\n\n  _proto.toggleChecked = function () {\n    function toggleChecked() {\n      // Set the checked property to the opposite of its current value\n      Nendoroids.update(this.props.nendoroid._id, {\n        $set: {\n          checked: !this.props.nendoroid.checked\n        }\n      });\n    }\n\n    return toggleChecked;\n  }();\n\n  _proto.deleteThisNendoroid = function () {\n    function deleteThisNendoroid() {\n      Nendoroids.remove(this.props.nendoroid._id);\n    }\n\n    return deleteThisNendoroid;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      // Give nendoroids a different className when they are checked off,\n      // so that we can style them nicely in CSS\n      var nendoroidClassName = this.props.nendoroid.checked ? 'checked' : '';\n      return React.createElement(\"li\", {\n        className: nendoroidClassName\n      }, React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: this.deleteThisNendoroid.bind(this)\n      }, \"\\xD7\"), React.createElement(\"input\", {\n        type: \"checkbox\",\n        readOnly: true,\n        checked: !!this.props.nendoroid.checked,\n        onClick: this.toggleChecked.bind(this)\n      }), React.createElement(\"span\", {\n        className: \"text\"\n      }, this.props.nendoroid.name));\n    }\n\n    return render;\n  }();\n\n  return Nendoroid;\n}(Component);\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// client/main.js                                                                              //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar render;\nmodule.link(\"react-dom\", {\n  render: function (v) {\n    render = v;\n  }\n}, 2);\nvar App;\nmodule.link(\"../imports/ui/App.js\", {\n  \"default\": function (v) {\n    App = v;\n  }\n}, 3);\nMeteor.startup(function () {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"e07ff6249872494d79e32618a294585dc65a9774","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/nendoroids.js","imports/ui/App.js","imports/ui/Nendoroid.js","client/main.js"],"names":["module","export","Nendoroids","Mongo","link","v","Collection","React","Component","ReactDOM","withTracker","Nendoroid","App","props","state","hideCompleted","handleSubmit","event","preventDefault","name","findDOMNode","refs","textInput","value","trim","insert","createdAt","Date","toggleHideCompleted","setState","renderNendoroids","filteredNendoroids","nendoroids","filter","nendoroid","checked","map","_id","render","incompleteCount","bind","exportDefault","find","sort","fetch","$ne","count","toggleChecked","update","$set","deleteThisNendoroid","remove","nendoroidClassName","Meteor","startup","document","getElementById"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\r\n\r\nexport const Nendoroids = new Mongo.Collection('nendoroids');","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withTracker } from 'meteor/react-meteor-data';\r\n\r\nimport { Nendoroids } from '../api/nendoroids.js';\r\n\r\nimport Nendoroid from './Nendoroid.js';\r\n\r\n// App component - represents the whole app\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hideCompleted: false,\r\n        };\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // Find the text field via the React ref\r\n        const name = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\r\n\r\n        Nendoroids.insert({\r\n            name,\r\n            createdAt: new Date(), // current time\r\n        });\r\n\r\n        // Clear form\r\n        ReactDOM.findDOMNode(this.refs.textInput).value = '';\r\n    }\r\n\r\n    toggleHideCompleted() {\r\n        this.setState({\r\n            hideCompleted: !this.state.hideCompleted,\r\n        });\r\n    }\r\n\r\n    renderNendoroids() {\r\n        let filteredNendoroids = this.props.nendoroids;\r\n        if (this.state.hideCompleted) {\r\n            filteredNendoroids = filteredNendoroids.filter(nendoroid => !nendoroid.checked);\r\n        }\r\n        return filteredNendoroids.map((nendoroid) => (\r\n            <Nendoroid key={nendoroid._id} nendoroid={nendoroid} />\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <header>\r\n                    <h1>Nendoroid List ({this.props.incompleteCount})</h1>\r\n\r\n                    <label className=\"hide-completed\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            readOnly\r\n                            checked={this.state.hideCompleted}\r\n                            onClick={this.toggleHideCompleted.bind(this)}\r\n                        />\r\n                        Hide Completed Nendoroids\r\n                    </label>\r\n\r\n                    <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\r\n                        <input\r\n                            type=\"text\"\r\n                            ref=\"textInput\"\r\n                            placeholder=\"Type to add new tasks\"\r\n                        />\r\n                    </form>\r\n                </header>\r\n\r\n                <ul>\r\n                    {this.renderNendoroids()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTracker(() => {\r\n    return {\r\n        nendoroids: Nendoroids.find({}, { sort: { createdAt: -1 } }).fetch(),\r\n        incompleteCount: Nendoroids.find({ checked: { $ne: true } }).count(),\r\n    };\r\n})(App);","import React, { Component } from 'react';\r\n\r\nimport { Nendoroids } from '../api/nendoroids.js';\r\n\r\n// Nendoroid component - represents a single nendoroid\r\nexport default class Nendoroid extends Component {\r\n    toggleChecked() {\r\n        // Set the checked property to the opposite of its current value\r\n        Nendoroids.update(this.props.nendoroid._id, {\r\n            $set: { checked: !this.props.nendoroid.checked },\r\n        });\r\n    }\r\n\r\n    deleteThisNendoroid() {\r\n        Nendoroids.remove(this.props.nendoroid._id);\r\n    }\r\n    render() {\r\n        // Give nendoroids a different className when they are checked off,\r\n        // so that we can style them nicely in CSS\r\n        const nendoroidClassName = this.props.nendoroid.checked ? 'checked' : '';\r\n        return (\r\n            <li className={nendoroidClassName}>\r\n                <button className=\"delete\" onClick={this.deleteThisNendoroid.bind(this)}>\r\n                    &times;\r\n        </button>\r\n\r\n                <input\r\n                    type=\"checkbox\"\r\n                    readOnly\r\n                    checked={!!this.props.nendoroid.checked}\r\n                    onClick={this.toggleChecked.bind(this)}\r\n                />\r\n\r\n                <span className=\"text\">{this.props.nendoroid.name}</span>\r\n            </li>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport App from '../imports/ui/App.js';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});"]}}]