[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"nendoroids.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                     //\n// imports/api/nendoroids.js                                                           //\n//                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////\n                                                                                       //\nmodule.export({\n  Nendoroids: () => Nendoroids\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Nendoroids = new Mongo.Collection('nendoroids');\n/////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"App.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                     //\n// imports/ui/App.js                                                                   //\n//                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////\n                                                                                       //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 2);\nlet Nendoroids;\nmodule.link(\"../api/nendoroids.js\", {\n  Nendoroids(v) {\n    Nendoroids = v;\n  }\n\n}, 3);\nlet Nendoroid;\nmodule.link(\"./Nendoroid.js\", {\n  default(v) {\n    Nendoroid = v;\n  }\n\n}, 4);\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideCompleted: false\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Find the text field via the React ref\n\n    const name = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n    Nendoroids.insert({\n      name,\n      createdAt: new Date() // current time\n\n    }); // Clear form\n\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted\n    });\n  }\n\n  renderNendoroids() {\n    let filteredNendoroids = this.props.nendoroids;\n\n    if (this.state.hideCompleted) {\n      filteredNendoroids = filteredNendoroids.filter(nendoroid => !nendoroid.checked);\n    }\n\n    return filteredNendoroids.map(nendoroid => React.createElement(Nendoroid, {\n      key: nendoroid._id,\n      nendoroid: nendoroid\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\"\n    }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Nendoroid List (\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n      className: \"hide-completed\"\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: this.state.hideCompleted,\n      onClick: this.toggleHideCompleted.bind(this)\n    }), \"Hide Completed Nendoroids\"), React.createElement(\"form\", {\n      className: \"new-task\",\n      onSubmit: this.handleSubmit.bind(this)\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"textInput\",\n      placeholder: \"Type to add new tasks\"\n    }))), React.createElement(\"ul\", null, this.renderNendoroids()));\n  }\n\n}\n\nmodule.exportDefault(withTracker(() => {\n  return {\n    nendoroids: Nendoroids.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    incompleteCount: Nendoroids.find({\n      checked: {\n        $ne: true\n      }\n    }).count()\n  };\n})(App));\n/////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Nendoroid.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                     //\n// imports/ui/Nendoroid.js                                                             //\n//                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////\n                                                                                       //\nmodule.export({\n  default: () => Nendoroid\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Nendoroids;\nmodule.link(\"../api/nendoroids.js\", {\n  Nendoroids(v) {\n    Nendoroids = v;\n  }\n\n}, 1);\n\nclass Nendoroid extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Nendoroids.update(this.props.nendoroid._id, {\n      $set: {\n        checked: !this.props.nendoroid.checked\n      }\n    });\n  }\n\n  deleteThisNendoroid() {\n    Nendoroids.remove(this.props.nendoroid._id);\n  }\n\n  render() {\n    // Give nendoroids a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    const nendoroidClassName = this.props.nendoroid.checked ? 'checked' : '';\n    return React.createElement(\"li\", {\n      className: nendoroidClassName\n    }, React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: this.deleteThisNendoroid.bind(this)\n    }, \"\\xD7\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: !!this.props.nendoroid.checked,\n      onClick: this.toggleChecked.bind(this)\n    }), React.createElement(\"span\", {\n      className: \"text\"\n    }, this.props.nendoroid.name));\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                     //\n// client/main.js                                                                      //\n//                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////\n                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nlet App;\nmodule.link(\"../imports/ui/App.js\", {\n  default(v) {\n    App = v;\n  }\n\n}, 3);\nMeteor.startup(() => {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n/////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"9107f1f396f5157f1e5eed468731f4f16f44503b","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/nendoroids.js","imports/ui/App.js","imports/ui/Nendoroid.js","client/main.js"],"names":["module","export","Nendoroids","Mongo","link","v","Collection","React","Component","default","ReactDOM","withTracker","Nendoroid","App","constructor","props","state","hideCompleted","handleSubmit","event","preventDefault","name","findDOMNode","refs","textInput","value","trim","insert","createdAt","Date","toggleHideCompleted","setState","renderNendoroids","filteredNendoroids","nendoroids","filter","nendoroid","checked","map","_id","render","incompleteCount","bind","exportDefault","find","sort","fetch","$ne","count","toggleChecked","update","$set","deleteThisNendoroid","remove","nendoroidClassName","Meteor","startup","document","getElementById"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\r\n\r\nexport const Nendoroids = new Mongo.Collection('nendoroids');","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withTracker } from 'meteor/react-meteor-data';\r\n\r\nimport { Nendoroids } from '../api/nendoroids.js';\r\n\r\nimport Nendoroid from './Nendoroid.js';\r\n\r\n// App component - represents the whole app\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hideCompleted: false,\r\n        };\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // Find the text field via the React ref\r\n        const name = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\r\n\r\n        Nendoroids.insert({\r\n            name,\r\n            createdAt: new Date(), // current time\r\n        });\r\n\r\n        // Clear form\r\n        ReactDOM.findDOMNode(this.refs.textInput).value = '';\r\n    }\r\n\r\n    toggleHideCompleted() {\r\n        this.setState({\r\n            hideCompleted: !this.state.hideCompleted,\r\n        });\r\n    }\r\n\r\n    renderNendoroids() {\r\n        let filteredNendoroids = this.props.nendoroids;\r\n        if (this.state.hideCompleted) {\r\n            filteredNendoroids = filteredNendoroids.filter(nendoroid => !nendoroid.checked);\r\n        }\r\n        return filteredNendoroids.map((nendoroid) => (\r\n            <Nendoroid key={nendoroid._id} nendoroid={nendoroid} />\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <header>\r\n                    <h1>Nendoroid List ({this.props.incompleteCount})</h1>\r\n\r\n                    <label className=\"hide-completed\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            readOnly\r\n                            checked={this.state.hideCompleted}\r\n                            onClick={this.toggleHideCompleted.bind(this)}\r\n                        />\r\n                        Hide Completed Nendoroids\r\n                    </label>\r\n\r\n                    <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\r\n                        <input\r\n                            type=\"text\"\r\n                            ref=\"textInput\"\r\n                            placeholder=\"Type to add new tasks\"\r\n                        />\r\n                    </form>\r\n                </header>\r\n\r\n                <ul>\r\n                    {this.renderNendoroids()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTracker(() => {\r\n    return {\r\n        nendoroids: Nendoroids.find({}, { sort: { createdAt: -1 } }).fetch(),\r\n        incompleteCount: Nendoroids.find({ checked: { $ne: true } }).count(),\r\n    };\r\n})(App);","import React, { Component } from 'react';\r\n\r\nimport { Nendoroids } from '../api/nendoroids.js';\r\n\r\n// Nendoroid component - represents a single nendoroid\r\nexport default class Nendoroid extends Component {\r\n    toggleChecked() {\r\n        // Set the checked property to the opposite of its current value\r\n        Nendoroids.update(this.props.nendoroid._id, {\r\n            $set: { checked: !this.props.nendoroid.checked },\r\n        });\r\n    }\r\n\r\n    deleteThisNendoroid() {\r\n        Nendoroids.remove(this.props.nendoroid._id);\r\n    }\r\n    render() {\r\n        // Give nendoroids a different className when they are checked off,\r\n        // so that we can style them nicely in CSS\r\n        const nendoroidClassName = this.props.nendoroid.checked ? 'checked' : '';\r\n        return (\r\n            <li className={nendoroidClassName}>\r\n                <button className=\"delete\" onClick={this.deleteThisNendoroid.bind(this)}>\r\n                    &times;\r\n        </button>\r\n\r\n                <input\r\n                    type=\"checkbox\"\r\n                    readOnly\r\n                    checked={!!this.props.nendoroid.checked}\r\n                    onClick={this.toggleChecked.bind(this)}\r\n                />\r\n\r\n                <span className=\"text\">{this.props.nendoroid.name}</span>\r\n            </li>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport App from '../imports/ui/App.js';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});"]}}]