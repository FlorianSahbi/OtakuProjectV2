[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"nendoroids.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/api/nendoroids.js                                                                    //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  Nendoroids: () => Nendoroids\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Nendoroids = new Mongo.Collection('nendoroids');\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"accountsConfig.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/startup/accountsConfig.js                                                            //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY'\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"AccountsUIWrapper.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/ui/AccountsUIWrapper.js                                                              //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  default: () => AccountsUIWrapper\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 2);\nlet Blaze;\nmodule.link(\"meteor/blaze\", {\n  Blaze(v) {\n    Blaze = v;\n  }\n\n}, 3);\n\nclass AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons, ReactDOM.findDOMNode(this.refs.container));\n  }\n\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n\n  render() {\n    // Just render a placeholder container that will be filled in\n    return React.createElement(\"span\", {\n      ref: \"container\"\n    });\n  }\n\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/ui/App.js                                                                            //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 3);\nlet Nendoroids;\nmodule.link(\"../api/nendoroids.js\", {\n  Nendoroids(v) {\n    Nendoroids = v;\n  }\n\n}, 4);\nlet Nendoroid;\nmodule.link(\"./Nendoroid.js\", {\n  default(v) {\n    Nendoroid = v;\n  }\n\n}, 5);\nlet AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  default(v) {\n    AccountsUIWrapper = v;\n  }\n\n}, 6);\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideObtained: false\n    };\n  } // Trigger when user push enter button\n\n\n  handleSubmit(event) {\n    event.preventDefault(); // Find the text field via the React ref\n\n    const name = ReactDOM.findDOMNode(this.refs.nameInput).value.trim();\n    Nendoroids.insert({\n      name,\n      createdAt: new Date(),\n      // current time\n      owner: Meteor.userId(),\n      // _id of logged in user\n      username: Meteor.user().username // username of logged in user\n\n    }); // Clear form\n\n    ReactDOM.findDOMNode(this.refs.nameInput).value = '';\n  }\n\n  toggleHideObtained() {\n    this.setState({\n      hideObtained: !this.state.hideObtained\n    });\n  } // render a list of nendoroids\n\n\n  renderNendoroids() {\n    let filteredNendoroids = this.props.nendoroids;\n\n    if (this.state.hideObtained) {\n      filteredNendoroids = filteredNendoroids.filter(nendoroid => !nendoroid.checked);\n    }\n\n    return filteredNendoroids.map(nendoroid => React.createElement(Nendoroid, {\n      key: nendoroid._id,\n      nendoroid: nendoroid\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\"\n    }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Nendoroid List (\", this.props.count, \")\"), React.createElement(\"label\", {\n      className: \"hide-completed\"\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: this.state.hideObtained,\n      onClick: this.toggleHideObtained.bind(this)\n    }), \"Hide Obtained Nendoroids\"), React.createElement(AccountsUIWrapper, null), this.props.currentUser ? React.createElement(\"form\", {\n      className: \"new-task\",\n      onSubmit: this.handleSubmit.bind(this)\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"nameInput\",\n      placeholder: \"Product Name\"\n    })) : ''), React.createElement(\"ul\", {\n      className: \"nendoroidList\"\n    }, this.renderNendoroids()));\n  }\n\n}\n\nmodule.exportDefault(withTracker(() => {\n  return {\n    nendoroids: Nendoroids.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    count: Nendoroids.find({\n      checked: {\n        $ne: true\n      }\n    }).count(),\n    currentUser: Meteor.user()\n  };\n})(App));\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Nendoroid.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/ui/Nendoroid.js                                                                      //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  default: () => Nendoroid\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Nendoroids;\nmodule.link(\"../api/nendoroids.js\", {\n  Nendoroids(v) {\n    Nendoroids = v;\n  }\n\n}, 1);\n\nclass Nendoroid extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Nendoroids.update(this.props.nendoroid._id, {\n      $set: {\n        checked: !this.props.nendoroid.checked\n      }\n    });\n  }\n\n  deleteThisNendoroid() {\n    Nendoroids.remove(this.props.nendoroid._id);\n  }\n\n  showInformation() {\n    console.log(this.props.nendoroid._id);\n  }\n\n  render() {\n    // Give nendoroids a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    // const nendoroidClassName = this.props.nendoroid.checked ? 'checked' : '';\n    return (// <li className={nendoroidClassName}>\n      React.createElement(\"li\", {\n        className: \"nendoroidCard\"\n      }, React.createElement(\"div\", {\n        className: \"nendoroidCardInnerBorder\"\n      }, React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: this.deleteThisNendoroid.bind(this)\n      }, \"\\u2661\"), React.createElement(\"span\", {\n        className: \"text\"\n      }, this.props.nendoroid.name), React.createElement(\"span\", {\n        className: \"number\"\n      }, \"#542\"), React.createElement(\"button\", {\n        className: \"nendoroidCardMoreInformations\",\n        onClick: this.showInformation.bind(this)\n      }, \"info\")))\n    );\n  }\n\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// client/main.js                                                                               //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nmodule.link(\"../imports/startup/accountsConfig.js\");\nlet App;\nmodule.link(\"../imports/ui/App.js\", {\n  default(v) {\n    App = v;\n  }\n\n}, 3);\nMeteor.startup(() => {\n  render(renderRoutes(), document.getElementById('app'));\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"418c4b9f80de9c471958ed274c6695a5a1e3d5e9","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/nendoroids.js","imports/startup/accountsConfig.js","imports/ui/AccountsUIWrapper.js","imports/ui/App.js","imports/ui/Nendoroid.js","client/main.js"],"names":["module","export","Nendoroids","Mongo","link","v","Collection","Accounts","ui","config","passwordSignupFields","default","AccountsUIWrapper","React","Component","ReactDOM","Template","Blaze","componentDidMount","view","render","loginButtons","findDOMNode","refs","container","componentWillUnmount","remove","Meteor","withTracker","Nendoroid","App","constructor","props","state","hideObtained","handleSubmit","event","preventDefault","name","nameInput","value","trim","insert","createdAt","Date","owner","userId","username","user","toggleHideObtained","setState","renderNendoroids","filteredNendoroids","nendoroids","filter","nendoroid","checked","map","_id","count","bind","currentUser","exportDefault","find","sort","fetch","$ne","toggleChecked","update","$set","deleteThisNendoroid","showInformation","console","log","startup","renderRoutes","document","getElementById"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\r\n\r\nexport const Nendoroids = new Mongo.Collection('nendoroids');","import { Accounts } from 'meteor/accounts-base';\r\n\r\nAccounts.ui.config({\r\n    passwordSignupFields: 'USERNAME_ONLY'\r\n});","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Template } from 'meteor/templating';\r\nimport { Blaze } from 'meteor/blaze';\r\n\r\nexport default class AccountsUIWrapper extends Component {\r\n    componentDidMount() {\r\n        // Use Meteor Blaze to render login buttons\r\n        this.view = Blaze.render(Template.loginButtons,\r\n            ReactDOM.findDOMNode(this.refs.container));\r\n    }\r\n    componentWillUnmount() {\r\n        // Clean up Blaze view\r\n        Blaze.remove(this.view);\r\n    }\r\n    render() {\r\n        // Just render a placeholder container that will be filled in\r\n        return <span ref=\"container\" />;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { withTracker } from 'meteor/react-meteor-data';\r\n\r\nimport { Nendoroids } from '../api/nendoroids.js';\r\n\r\nimport Nendoroid from './Nendoroid.js';\r\nimport AccountsUIWrapper from './AccountsUIWrapper.js';\r\n\r\n// App component - represents the whole app\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hideObtained: false,\r\n        };\r\n    }\r\n\r\n    // Trigger when user push enter button\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        // Find the text field via the React ref\r\n        const name = ReactDOM.findDOMNode(this.refs.nameInput).value.trim();\r\n\r\n        Nendoroids.insert({\r\n            name,\r\n            createdAt: new Date(),              // current time\r\n            owner: Meteor.userId(),             // _id of logged in user\r\n            username: Meteor.user().username,   // username of logged in user\r\n        });\r\n\r\n        // Clear form\r\n        ReactDOM.findDOMNode(this.refs.nameInput).value = '';\r\n    }\r\n\r\n\r\n    toggleHideObtained() {\r\n        this.setState({\r\n            hideObtained: !this.state.hideObtained,\r\n        });\r\n    }\r\n\r\n    // render a list of nendoroids\r\n    renderNendoroids() {\r\n        let filteredNendoroids = this.props.nendoroids;\r\n        if (this.state.hideObtained) {\r\n            filteredNendoroids = filteredNendoroids.filter(nendoroid => !nendoroid.checked);\r\n        }\r\n        return filteredNendoroids.map(nendoroid => (\r\n            <Nendoroid key={nendoroid._id} nendoroid={nendoroid} />\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <header>\r\n                    <h1>Nendoroid List ({this.props.count})</h1>\r\n\r\n                    <label className=\"hide-completed\">\r\n                        <input type=\"checkbox\" readOnly\r\n                            checked={this.state.hideObtained}\r\n                            onClick={this.toggleHideObtained.bind(this)}\r\n                        />\r\n                        Hide Obtained Nendoroids\r\n                    </label>\r\n\r\n                    <AccountsUIWrapper />\r\n\r\n                    {this.props.currentUser ?\r\n                        <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\r\n                            <input type=\"text\" ref=\"nameInput\" placeholder=\"Product Name\" />\r\n                        </form> : ''\r\n                    }\r\n                </header>\r\n\r\n                <ul className=\"nendoroidList\">\r\n                    {this.renderNendoroids()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTracker(() => {\r\n    return {\r\n        nendoroids: Nendoroids.find({}, { sort: { createdAt: -1 } }).fetch(),\r\n        count: Nendoroids.find({ checked: { $ne: true } }).count(),\r\n        currentUser: Meteor.user(),\r\n    };\r\n})(App);","import React, { Component } from 'react';\r\n\r\nimport { Nendoroids } from '../api/nendoroids.js';\r\n\r\n// Nendoroid component - represents a single nendoroid\r\nexport default class Nendoroid extends Component {\r\n\r\n    toggleChecked() {\r\n        // Set the checked property to the opposite of its current value\r\n        Nendoroids.update(this.props.nendoroid._id, {\r\n            $set: { checked: !this.props.nendoroid.checked },\r\n        });\r\n    }\r\n\r\n    deleteThisNendoroid() {\r\n        Nendoroids.remove(this.props.nendoroid._id);\r\n    }\r\n\r\n    showInformation() {\r\n        console.log(this.props.nendoroid._id);\r\n    }\r\n\r\n    render() {\r\n        // Give nendoroids a different className when they are checked off,\r\n        // so that we can style them nicely in CSS\r\n        // const nendoroidClassName = this.props.nendoroid.checked ? 'checked' : '';\r\n        return (\r\n            // <li className={nendoroidClassName}>\r\n            <li className=\"nendoroidCard\">\r\n                <div className=\"nendoroidCardInnerBorder\">\r\n                    <button className=\"delete\" onClick={this.deleteThisNendoroid.bind(this)}>♡</button>\r\n\r\n                    {/* <input\r\n                        type=\"checkbox\"\r\n                        readOnly\r\n                        checked={!!this.props.nendoroid.checked}\r\n                        onClick={this.toggleChecked.bind(this)}\r\n                    /> */}\r\n\r\n                    <span className=\"text\">\r\n                        {this.props.nendoroid.name}\r\n                        {/* <strong>{this.props.nendoroid.username}</strong>: {this.props.nendoroid.name} */}\r\n                    </span>\r\n                    \r\n                    <span className=\"number\">\r\n                        {/* {this.props.nendoroid.number} */}\r\n                        #542\r\n                        {/* <strong>{this.props.nendoroid.username}</strong>: {this.props.nendoroid.name} */}\r\n                    </span>\r\n                    <button className=\"nendoroidCardMoreInformations\" onClick={this.showInformation.bind(this)}>info</button>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport '../imports/startup/accountsConfig.js';\nimport App from '../imports/ui/App.js';\n\nMeteor.startup(() => {\n  render(renderRoutes(), document.getElementById('app'));\n});"]}}]